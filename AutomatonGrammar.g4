grammar AutomatonGrammar; 
s : 'A' alfabeto 'Q' estados 'T' transicoes 'I' inicio 'F' final EOF;
alfabeto : '={' alf '}';
alf : LETRA ',' alf | NUM ',' alf | LETRA | NUM ;
LETRA : 'a'..'z';
NUM : '0' .. '1';
estados : '={'estado'}';
estado :  EST',' estado | EST;
EST : 'q'NUM;
transicoes : '={'trans'}';
trans : '('EST','LETRA')='EST',' trans | '('EST','LETRA')='EST;
inicio : '='EST;
final : '={'EST'}';
WS : [ \t\r\n]+ -> skip;